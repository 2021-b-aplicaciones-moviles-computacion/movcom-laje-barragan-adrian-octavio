// Generated by view binder compiler. Do not edit!
package com.example.fakeapplication_snapchat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fakeapplication_snapchat.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMensajeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button Enviar;

  @NonNull
  public final View darkDivider;

  @NonNull
  public final EditText etMessage;

  @NonNull
  public final LinearLayout llLayoutBar;

  @NonNull
  public final RecyclerView rvMessages;

  private ActivityMensajeBinding(@NonNull RelativeLayout rootView, @NonNull Button Enviar,
      @NonNull View darkDivider, @NonNull EditText etMessage, @NonNull LinearLayout llLayoutBar,
      @NonNull RecyclerView rvMessages) {
    this.rootView = rootView;
    this.Enviar = Enviar;
    this.darkDivider = darkDivider;
    this.etMessage = etMessage;
    this.llLayoutBar = llLayoutBar;
    this.rvMessages = rvMessages;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMensajeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMensajeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_mensaje, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMensajeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Enviar;
      Button Enviar = ViewBindings.findChildViewById(rootView, id);
      if (Enviar == null) {
        break missingId;
      }

      id = R.id.dark_divider;
      View darkDivider = ViewBindings.findChildViewById(rootView, id);
      if (darkDivider == null) {
        break missingId;
      }

      id = R.id.et_message;
      EditText etMessage = ViewBindings.findChildViewById(rootView, id);
      if (etMessage == null) {
        break missingId;
      }

      id = R.id.ll_layout_bar;
      LinearLayout llLayoutBar = ViewBindings.findChildViewById(rootView, id);
      if (llLayoutBar == null) {
        break missingId;
      }

      id = R.id.rv_messages;
      RecyclerView rvMessages = ViewBindings.findChildViewById(rootView, id);
      if (rvMessages == null) {
        break missingId;
      }

      return new ActivityMensajeBinding((RelativeLayout) rootView, Enviar, darkDivider, etMessage,
          llLayoutBar, rvMessages);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
